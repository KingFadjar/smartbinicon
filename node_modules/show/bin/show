#!/usr/bin/env node

var
  _ = require('lodash'),
  bower = require('bower'),
  express = require('express'),
  fs = require('fs'),
  app = express(),
  server = require('http').createServer(app),
  cwd = process.cwd()
;

app
  .use(express.logger('dev'))
  .get('/', pretendIndex)
  .get('/:screen.html', preparePatch, prependComponents)
  .use(express.static(cwd))
;

server.listen(3900);
console.log(_.template('http://${address}:${port}', server.address()));


//static() handles this but we want post-processing
//TODO: pause response; re-use static(); post-process response.body & continue the stream
function pretendIndex(req, res, next){
  req.url = '/index.html';
  next();
}

function preparePatch(res, res, next){
  //TODO: async
  if (! (fs.existsSync(cwd + '/bower.json') || fs.existsSync(cwd + '/.bowerrc'))){
    app.set('patch', '');
    return next();
  }

  bower.commands
    .list({sources: true})
    .on('data', function(sources){
      _.defaults(sources, {'.css': [], '.js': [], '.html': []});

      app.set('patch', sources['.css'].map(cssLink).concat(sources['.js'].map(jsScript)).concat(sources['.html'].map(importLink)).join("\n"));
      next();
    });
}

function prependComponents(req, res){
  fs.readFile('./' + req.path, 'utf-8', function(err, html){
    if (err){
      res.send(404);
      return;
    }

    res.type('html');
    res.end(html.replace(/(<(link|script|style|\/head|body|\/body)|$)/, app.get('patch') + "$1"));
  });
}

//html imports - web components
function importLink(href){
  return _.template('<link rel="import" href="<%= href %>">', { href: href });
}

function cssLink(href){
  return _.template('<link rel="stylesheet" href="<%= href %>">', { href: href });
}

function jsScript(src){
  return _.template('<script src="<%= src %>"></script>', { src: src });
}